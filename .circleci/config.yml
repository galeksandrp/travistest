version: 2
jobs:
  build:
    machine: true
    steps:
      - checkout
      - run: echo "export BRANCH=$(echo $CIRCLE_BRANCH | sed 's/^circle-//')" >> $BASH_ENV
      - run: echo "export URL=$(curl https://developer.microsoft.com/en-us/microsoft-edge/api/tools/vms/ | jq -r '.[].software[].files[]|select(.name=="IE9.Win7.VirtualBox.zip").url')" >> $BASH_ENV
      - run: echo "export VERSION=$(echo $URL | grep -o -P '[0-9]{8}')" >> $BASH_ENV
      - run: sudo apt-get update && sudo apt-get install -y linux-headers-$(uname -r) virtualbox
      - run: wget https://releases.hashicorp.com/packer/1.2.4/packer_1.2.4_linux_amd64.zip
      - run: unzip packer_1.2.4_linux_amd64.zip -d ~/bin
      - run: chmod +x ~/bin/packer
      - run: wget $URL
      - run: unzip IE9.Win7.VirtualBox.zip
      - run: rm IE9.Win7.VirtualBox.zip
      - run: packer build $BRANCH.json
      - run: >-
          curl -H "Content-Type: application/json" -H "Authorization: Bearer $VAGRANT_CLOUD_TOKEN" https://app.vagrantup.com/api/v1/boxes --data "{ \"box\": { \"username\": \"$GITHUB_NAME\", \"name\": \"$BRANCH\", \"is_private\": false } }"
      - run: >-
          curl -H "Content-Type: application/json" -H "Authorization: Bearer $VAGRANT_CLOUD_TOKEN" https://app.vagrantup.com/api/v1/box/$GITHUB_NAME/$BRANCH/versions --data "{ \"version\": { \"version\": \"$VERSION\" } }"
      - run: >-
          curl -H "Content-Type: application/json" -H "Authorization: Bearer $VAGRANT_CLOUD_TOKEN" https://app.vagrantup.com/api/v1/box/$GITHUB_NAME/$BRANCH/version/$VERSION/providers --data '{ "provider": { "name": "virtualbox" } }'
      - run: >-
          curl -X PUT --upload-file packer_virtualbox-ovf_virtualbox.box $(curl -H "Authorization: Bearer $VAGRANT_CLOUD_TOKEN" "https://app.vagrantup.com/api/v1/box/$GITHUB_NAME/$BRANCH/version/$VERSION/provider/virtualbox/upload" | jq -r '.upload_path') || true
      - run: >-
          curl -H "Authorization: Bearer $VAGRANT_CLOUD_TOKEN" https://app.vagrantup.com/api/v1/box/$GITHUB_NAME/$BRANCH/version/$VERSION/release --request PUT
